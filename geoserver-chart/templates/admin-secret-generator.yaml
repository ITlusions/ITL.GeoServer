{{- if .Values.geoserver.admin.autoGeneratePassword }}
{{- $existingSecret := lookup "v1" "Secret" .Release.Namespace (printf "%s-admin" (include "geoserver.fullname" .)) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "geoserver.fullname" . }}-admin
  labels:
    {{- include "geoserver.labels" . | nindent 4 }}
    app.kubernetes.io/component: admin-credentials
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation
    generated-by: geoserver-admin-secret-generator
    generated-at: {{ now | unixEpoch | quote }}
type: Opaque
data:
  username: {{ .Values.geoserver.admin.username | b64enc }}
  {{- if $existingSecret }}
  # Preserve existing password across upgrades
  password: {{ index $existingSecret.data "password" }}
  {{- else }}
  # Generate new secure random password (32 characters)
  password: {{ randAlphaNum 32 | b64enc }}
  {{- end }}
---
{{- end }}
